import matplotlib.pyplot as plt
import dateutil.relativedelta

from operator import itemgetter
from malware_data_science.db import DB, Campaign

class CampaignTimeline:
  def __init__(self, attribute_type_id: int, campaign_title: str):
    self.attribute_type_id = attribute_type_id
    self.campaign_title = campaign_title
    self.db = DB()
  
  def campaign_entries(self) -> list:
    dataset = list()
    for entry in Campaign.all_by_attribute_id_created_at_desc(self.attribute_type_id):
      dataset.append([entry.number, entry.malware.created_at])
    return dataset

  def plot_timeline(self) -> None:
    campaign = self.campaign_entries()
    series = set([])
    dataset = sorted(campaign, key=itemgetter(0))
    for campaign_number, _created_at in dataset:
      series.add(int(campaign_number))

    series = sorted(list(series))
    x, y = [], []

    for campaign_number, created_at in dataset:
      x.append(created_at)
      y.append(series.index(campaign_number))
      
    plt.figure(figsize=(10, 6), edgecolor=None)
    plt.grid(True)
    plt.ylim(-1, len(series))
    
    if campaign:
      start_time = campaign[-1][1] - dateutil.relativedelta.relativedelta(months=1)
      end_time = campaign[0][1] + dateutil.relativedelta.relativedelta(months=1)
      plt.xlim(start_time, end_time)
    else:
      ptl.title('No data available', fontsize=20)

    plt.yticks(range(len(series)), series)
    plt.ylabel('Campaign number', fontsize=16)
    plt.scatter(x, y, marker='o', color=(0.7, 0.3, 0.3), s=150,
                edgecolor=(0.1, 0.1, 0.1), linewidths=0.75,
                cmap='spectral')

  def save_fig(self, path: str) -> None:
    plt.savefig(path, format='png')
