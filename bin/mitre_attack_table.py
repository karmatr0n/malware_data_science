import os
import sys
import pdb

sys.path.append(os.path.dirname(os.path.realpath(__file__))+'/..')
from malware_data_science.config import Config
from malware_data_science.db import DB, Campaign, AttackTactic, AttributeType
from malware_data_science.mitre_attack_table import MitreAttackTable

db = DB()

def ttps_by_attribute_type_id(attribute_type_id: int):
  ttps = {tactic.name: [] for tactic in AttackTactic.all()}
  del ttps['Initial Access']
  del ttps['Exfiltration']
  for campaign in Campaign.all_by_attribute_type_id(attribute_type_id):
    for threat_indicator in campaign.malware.threat_indicators:
      tactic_name = threat_indicator.attack_technique.attack_tactic.name
      if tactic_name == 'Initial Access':
        continue
      operation_name = threat_indicator.operation
      operation_name = (operation_name[:39] + '..') if len(operation_name) > 39 else operation_name
      technique_name = threat_indicator.attack_technique.name
      technique_name = (technique_name[:25] + '..') if len(technique_name) > 25 else technique_name 
      technique_name = technique_name + ' - ' + threat_indicator.attack_technique.technique_id
      op_tech = operation_name + "\n" + technique_name
      if not op_tech in ttps[tactic_name]:
        ttps[tactic_name].append(op_tech)
  return ttps

config = Config()

ttps = ttps_by_attribute_type_id(1)
title = 'Tactics, techniques and procedures for malware networks by domain'
attack_table = MitreAttackTable(ttps, title)
attack_table.build_data_frame()
attack_table.render_table()
attack_table.save_fig('data/results/attack_table_by_domain.png')

ttps = ttps_by_attribute_type_id(10)
title = 'Tactics, techniques and procedures for malware networks by muxtexes'
attack_table = MitreAttackTable(ttps, title)
attack_table.build_data_frame()
attack_table.render_table()
attack_table.save_fig('data/results/attack_table_by_domain.png')

ttps = ttps_by_attribute_type_id(5)
title = 'Tactics, techniques and procedures for malware networks by files written on disk'
attack_table = MitreAttackTable(ttps, title)
attack_table.build_data_frame()
attack_table.render_table()
attack_table.save_fig('data/results/attack_table_by_files_written_on_disk.png')
